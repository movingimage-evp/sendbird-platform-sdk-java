/*
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.SendBirdMember;
import org.openapitools.client.model.SendBirdMessageResponse;
import org.openapitools.client.model.SendBirdUser;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for SendBirdGroupChannel
 */
public class SendBirdGroupChannelTest {
    private final SendBirdGroupChannel model = new SendBirdGroupChannel();

    /**
     * Model tests for SendBirdGroupChannel
     */
    @Test
    public void testSendBirdGroupChannel() {
        // TODO: test SendBirdGroupChannel
    }

    /**
     * Test the property 'coverUrl'
     */
    @Test
    public void coverUrlTest() {
        // TODO: test coverUrl
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'creator'
     */
    @Test
    public void creatorTest() {
        // TODO: test creator
    }

    /**
     * Test the property 'customType'
     */
    @Test
    public void customTypeTest() {
        // TODO: test customType
    }

    /**
     * Test the property 'data'
     */
    @Test
    public void dataTest() {
        // TODO: test data
    }

    /**
     * Test the property 'hiddenState'
     */
    @Test
    public void hiddenStateTest() {
        // TODO: test hiddenState
    }

    /**
     * Test the property 'invitedAt'
     */
    @Test
    public void invitedAtTest() {
        // TODO: test invitedAt
    }

    /**
     * Test the property 'inviter'
     */
    @Test
    public void inviterTest() {
        // TODO: test inviter
    }

    /**
     * Test the property 'isAccessCodeRequired'
     */
    @Test
    public void isAccessCodeRequiredTest() {
        // TODO: test isAccessCodeRequired
    }

    /**
     * Test the property 'isBroadcast'
     */
    @Test
    public void isBroadcastTest() {
        // TODO: test isBroadcast
    }

    /**
     * Test the property 'isDiscoverable'
     */
    @Test
    public void isDiscoverableTest() {
        // TODO: test isDiscoverable
    }

    /**
     * Test the property 'isDistinct'
     */
    @Test
    public void isDistinctTest() {
        // TODO: test isDistinct
    }

    /**
     * Test the property 'isEphemeral'
     */
    @Test
    public void isEphemeralTest() {
        // TODO: test isEphemeral
    }

    /**
     * Test the property 'isFrozen'
     */
    @Test
    public void isFrozenTest() {
        // TODO: test isFrozen
    }

    /**
     * Test the property 'isHidden'
     */
    @Test
    public void isHiddenTest() {
        // TODO: test isHidden
    }

    /**
     * Test the property 'isPublic'
     */
    @Test
    public void isPublicTest() {
        // TODO: test isPublic
    }

    /**
     * Test the property 'isPushEnabled'
     */
    @Test
    public void isPushEnabledTest() {
        // TODO: test isPushEnabled
    }

    /**
     * Test the property 'isSuper'
     */
    @Test
    public void isSuperTest() {
        // TODO: test isSuper
    }

    /**
     * Test the property 'joinedAt'
     */
    @Test
    public void joinedAtTest() {
        // TODO: test joinedAt
    }

    /**
     * Test the property 'joinedMemberCount'
     */
    @Test
    public void joinedMemberCountTest() {
        // TODO: test joinedMemberCount
    }

    /**
     * Test the property 'lastMessage'
     */
    @Test
    public void lastMessageTest() {
        // TODO: test lastMessage
    }

    /**
     * Test the property 'memberCount'
     */
    @Test
    public void memberCountTest() {
        // TODO: test memberCount
    }

    /**
     * Test the property 'members'
     */
    @Test
    public void membersTest() {
        // TODO: test members
    }

    /**
     * Test the property 'messageOffsetTimestamp'
     */
    @Test
    public void messageOffsetTimestampTest() {
        // TODO: test messageOffsetTimestamp
    }

    /**
     * Test the property 'messageSurvivalSeconds'
     */
    @Test
    public void messageSurvivalSecondsTest() {
        // TODO: test messageSurvivalSeconds
    }

    /**
     * Test the property 'myCountPreference'
     */
    @Test
    public void myCountPreferenceTest() {
        // TODO: test myCountPreference
    }

    /**
     * Test the property 'myLastRead'
     */
    @Test
    public void myLastReadTest() {
        // TODO: test myLastRead
    }

    /**
     * Test the property 'myMemberState'
     */
    @Test
    public void myMemberStateTest() {
        // TODO: test myMemberState
    }

    /**
     * Test the property 'myMutedState'
     */
    @Test
    public void myMutedStateTest() {
        // TODO: test myMutedState
    }

    /**
     * Test the property 'myPushTriggerOption'
     */
    @Test
    public void myPushTriggerOptionTest() {
        // TODO: test myPushTriggerOption
    }

    /**
     * Test the property 'myRole'
     */
    @Test
    public void myRoleTest() {
        // TODO: test myRole
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'unreadMentionCount'
     */
    @Test
    public void unreadMentionCountTest() {
        // TODO: test unreadMentionCount
    }

    /**
     * Test the property 'unreadMessageCount'
     */
    @Test
    public void unreadMessageCountTest() {
        // TODO: test unreadMessageCount
    }

    /**
     * Test the property 'channelUrl'
     */
    @Test
    public void channelUrlTest() {
        // TODO: test channelUrl
    }

}
