/*
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.SendBirdUser;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.sendbird.client.JSON;

/**
 * SendBirdOpenChannel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-29T13:37:01.045476+01:00[Europe/London]")
public class SendBirdOpenChannel {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CUSTOM_TYPE = "custom_type";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TYPE)
  private String customType;

  public static final String SERIALIZED_NAME_CHANNEL_URL = "channel_url";
  @SerializedName(SERIALIZED_NAME_CHANNEL_URL)
  private String channelUrl;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private BigDecimal createdAt;

  public static final String SERIALIZED_NAME_COVER_URL = "cover_url";
  @SerializedName(SERIALIZED_NAME_COVER_URL)
  private String coverUrl;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private SendBirdUser creator;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private String data;

  public static final String SERIALIZED_NAME_IS_DYNAMIC_PARTITIONED = "is_dynamic_partitioned";
  @SerializedName(SERIALIZED_NAME_IS_DYNAMIC_PARTITIONED)
  private Boolean isDynamicPartitioned;

  public static final String SERIALIZED_NAME_IS_EPHEMERAL = "is_ephemeral";
  @SerializedName(SERIALIZED_NAME_IS_EPHEMERAL)
  private Boolean isEphemeral;

  public static final String SERIALIZED_NAME_IS_FROZEN = "is_frozen";
  @SerializedName(SERIALIZED_NAME_IS_FROZEN)
  private Boolean isFrozen;

  public static final String SERIALIZED_NAME_MAX_LENGTH_MESSAGE = "max_length_message";
  @SerializedName(SERIALIZED_NAME_MAX_LENGTH_MESSAGE)
  private BigDecimal maxLengthMessage;

  public static final String SERIALIZED_NAME_OPERATORS = "operators";
  @SerializedName(SERIALIZED_NAME_OPERATORS)
  private List<SendBirdUser> operators = null;

  public static final String SERIALIZED_NAME_PARTICIPANT_COUNT = "participant_count";
  @SerializedName(SERIALIZED_NAME_PARTICIPANT_COUNT)
  private BigDecimal participantCount;

  public static final String SERIALIZED_NAME_FREEZE = "freeze";
  @SerializedName(SERIALIZED_NAME_FREEZE)
  private Boolean freeze;

  public SendBirdOpenChannel() { 
  }

  public SendBirdOpenChannel name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public SendBirdOpenChannel customType(String customType) {
    
    this.customType = customType;
    return this;
  }

   /**
   * Get customType
   * @return customType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCustomType() {
    return customType;
  }


  public void setCustomType(String customType) {
    this.customType = customType;
  }


  public SendBirdOpenChannel channelUrl(String channelUrl) {
    
    this.channelUrl = channelUrl;
    return this;
  }

   /**
   * Get channelUrl
   * @return channelUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChannelUrl() {
    return channelUrl;
  }


  public void setChannelUrl(String channelUrl) {
    this.channelUrl = channelUrl;
  }


  public SendBirdOpenChannel createdAt(BigDecimal createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(BigDecimal createdAt) {
    this.createdAt = createdAt;
  }


  public SendBirdOpenChannel coverUrl(String coverUrl) {
    
    this.coverUrl = coverUrl;
    return this;
  }

   /**
   * Get coverUrl
   * @return coverUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCoverUrl() {
    return coverUrl;
  }


  public void setCoverUrl(String coverUrl) {
    this.coverUrl = coverUrl;
  }


  public SendBirdOpenChannel creator(SendBirdUser creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SendBirdUser getCreator() {
    return creator;
  }


  public void setCreator(SendBirdUser creator) {
    this.creator = creator;
  }


  public SendBirdOpenChannel data(String data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getData() {
    return data;
  }


  public void setData(String data) {
    this.data = data;
  }


  public SendBirdOpenChannel isDynamicPartitioned(Boolean isDynamicPartitioned) {
    
    this.isDynamicPartitioned = isDynamicPartitioned;
    return this;
  }

   /**
   * Get isDynamicPartitioned
   * @return isDynamicPartitioned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDynamicPartitioned() {
    return isDynamicPartitioned;
  }


  public void setIsDynamicPartitioned(Boolean isDynamicPartitioned) {
    this.isDynamicPartitioned = isDynamicPartitioned;
  }


  public SendBirdOpenChannel isEphemeral(Boolean isEphemeral) {
    
    this.isEphemeral = isEphemeral;
    return this;
  }

   /**
   * Get isEphemeral
   * @return isEphemeral
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsEphemeral() {
    return isEphemeral;
  }


  public void setIsEphemeral(Boolean isEphemeral) {
    this.isEphemeral = isEphemeral;
  }


  public SendBirdOpenChannel isFrozen(Boolean isFrozen) {
    
    this.isFrozen = isFrozen;
    return this;
  }

   /**
   * Get isFrozen
   * @return isFrozen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsFrozen() {
    return isFrozen;
  }


  public void setIsFrozen(Boolean isFrozen) {
    this.isFrozen = isFrozen;
  }


  public SendBirdOpenChannel maxLengthMessage(BigDecimal maxLengthMessage) {
    
    this.maxLengthMessage = maxLengthMessage;
    return this;
  }

   /**
   * Get maxLengthMessage
   * @return maxLengthMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMaxLengthMessage() {
    return maxLengthMessage;
  }


  public void setMaxLengthMessage(BigDecimal maxLengthMessage) {
    this.maxLengthMessage = maxLengthMessage;
  }


  public SendBirdOpenChannel operators(List<SendBirdUser> operators) {
    
    this.operators = operators;
    return this;
  }

  public SendBirdOpenChannel addOperatorsItem(SendBirdUser operatorsItem) {
    if (this.operators == null) {
      this.operators = new ArrayList<>();
    }
    this.operators.add(operatorsItem);
    return this;
  }

   /**
   * Get operators
   * @return operators
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SendBirdUser> getOperators() {
    return operators;
  }


  public void setOperators(List<SendBirdUser> operators) {
    this.operators = operators;
  }


  public SendBirdOpenChannel participantCount(BigDecimal participantCount) {
    
    this.participantCount = participantCount;
    return this;
  }

   /**
   * Get participantCount
   * @return participantCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getParticipantCount() {
    return participantCount;
  }


  public void setParticipantCount(BigDecimal participantCount) {
    this.participantCount = participantCount;
  }


  public SendBirdOpenChannel freeze(Boolean freeze) {
    
    this.freeze = freeze;
    return this;
  }

   /**
   * Get freeze
   * @return freeze
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFreeze() {
    return freeze;
  }


  public void setFreeze(Boolean freeze) {
    this.freeze = freeze;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendBirdOpenChannel sendBirdOpenChannel = (SendBirdOpenChannel) o;
    return Objects.equals(this.name, sendBirdOpenChannel.name) &&
        Objects.equals(this.customType, sendBirdOpenChannel.customType) &&
        Objects.equals(this.channelUrl, sendBirdOpenChannel.channelUrl) &&
        Objects.equals(this.createdAt, sendBirdOpenChannel.createdAt) &&
        Objects.equals(this.coverUrl, sendBirdOpenChannel.coverUrl) &&
        Objects.equals(this.creator, sendBirdOpenChannel.creator) &&
        Objects.equals(this.data, sendBirdOpenChannel.data) &&
        Objects.equals(this.isDynamicPartitioned, sendBirdOpenChannel.isDynamicPartitioned) &&
        Objects.equals(this.isEphemeral, sendBirdOpenChannel.isEphemeral) &&
        Objects.equals(this.isFrozen, sendBirdOpenChannel.isFrozen) &&
        Objects.equals(this.maxLengthMessage, sendBirdOpenChannel.maxLengthMessage) &&
        Objects.equals(this.operators, sendBirdOpenChannel.operators) &&
        Objects.equals(this.participantCount, sendBirdOpenChannel.participantCount) &&
        Objects.equals(this.freeze, sendBirdOpenChannel.freeze);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, customType, channelUrl, createdAt, coverUrl, creator, data, isDynamicPartitioned, isEphemeral, isFrozen, maxLengthMessage, operators, participantCount, freeze);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendBirdOpenChannel {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    customType: ").append(toIndentedString(customType)).append("\n");
    sb.append("    channelUrl: ").append(toIndentedString(channelUrl)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    coverUrl: ").append(toIndentedString(coverUrl)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    isDynamicPartitioned: ").append(toIndentedString(isDynamicPartitioned)).append("\n");
    sb.append("    isEphemeral: ").append(toIndentedString(isEphemeral)).append("\n");
    sb.append("    isFrozen: ").append(toIndentedString(isFrozen)).append("\n");
    sb.append("    maxLengthMessage: ").append(toIndentedString(maxLengthMessage)).append("\n");
    sb.append("    operators: ").append(toIndentedString(operators)).append("\n");
    sb.append("    participantCount: ").append(toIndentedString(participantCount)).append("\n");
    sb.append("    freeze: ").append(toIndentedString(freeze)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("custom_type");
    openapiFields.add("channel_url");
    openapiFields.add("created_at");
    openapiFields.add("cover_url");
    openapiFields.add("creator");
    openapiFields.add("data");
    openapiFields.add("is_dynamic_partitioned");
    openapiFields.add("is_ephemeral");
    openapiFields.add("is_frozen");
    openapiFields.add("max_length_message");
    openapiFields.add("operators");
    openapiFields.add("participant_count");
    openapiFields.add("freeze");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SendBirdOpenChannel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SendBirdOpenChannel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SendBirdOpenChannel is not found in the empty JSON string", SendBirdOpenChannel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SendBirdOpenChannel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SendBirdOpenChannel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("custom_type") != null && !jsonObj.get("custom_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_type").toString()));
      }
      if (jsonObj.get("channel_url") != null && !jsonObj.get("channel_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channel_url").toString()));
      }
      if (jsonObj.get("cover_url") != null && !jsonObj.get("cover_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cover_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cover_url").toString()));
      }
      // validate the optional field `creator`
      if (jsonObj.getAsJsonObject("creator") != null) {
        SendBirdUser.validateJsonObject(jsonObj.getAsJsonObject("creator"));
      }
      if (jsonObj.get("data") != null && !jsonObj.get("data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data").toString()));
      }
      JsonArray jsonArrayoperators = jsonObj.getAsJsonArray("operators");
      if (jsonArrayoperators != null) {
        // ensure the json data is an array
        if (!jsonObj.get("operators").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `operators` to be an array in the JSON string but got `%s`", jsonObj.get("operators").toString()));
        }

        // validate the optional field `operators` (array)
        for (int i = 0; i < jsonArrayoperators.size(); i++) {
          SendBirdUser.validateJsonObject(jsonArrayoperators.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SendBirdOpenChannel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SendBirdOpenChannel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SendBirdOpenChannel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SendBirdOpenChannel.class));

       return (TypeAdapter<T>) new TypeAdapter<SendBirdOpenChannel>() {
           @Override
           public void write(JsonWriter out, SendBirdOpenChannel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SendBirdOpenChannel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SendBirdOpenChannel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SendBirdOpenChannel
  * @throws IOException if the JSON string is invalid with respect to SendBirdOpenChannel
  */
  public static SendBirdOpenChannel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SendBirdOpenChannel.class);
  }

 /**
  * Convert an instance of SendBirdOpenChannel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

