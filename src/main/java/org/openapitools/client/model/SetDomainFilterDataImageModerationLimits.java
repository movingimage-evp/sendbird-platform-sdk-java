/*
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.sendbird.client.JSON;

/**
 * SetDomainFilterDataImageModerationLimits
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-21T17:39:57.479198+01:00[Europe/London]")
public class SetDomainFilterDataImageModerationLimits {
  public static final String SERIALIZED_NAME_ADULT = "adult";
  @SerializedName(SERIALIZED_NAME_ADULT)
  private Integer adult;

  public static final String SERIALIZED_NAME_SPOOF = "spoof";
  @SerializedName(SERIALIZED_NAME_SPOOF)
  private Integer spoof;

  public static final String SERIALIZED_NAME_MEDICAL = "medical";
  @SerializedName(SERIALIZED_NAME_MEDICAL)
  private Integer medical;

  public static final String SERIALIZED_NAME_VIOLENCE = "violence";
  @SerializedName(SERIALIZED_NAME_VIOLENCE)
  private Integer violence;

  public static final String SERIALIZED_NAME_RACY = "racy";
  @SerializedName(SERIALIZED_NAME_RACY)
  private Integer racy;

  public SetDomainFilterDataImageModerationLimits() { 
  }

  public SetDomainFilterDataImageModerationLimits adult(Integer adult) {
    
    this.adult = adult;
    return this;
  }

   /**
   * Get adult
   * @return adult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAdult() {
    return adult;
  }


  public void setAdult(Integer adult) {
    this.adult = adult;
  }


  public SetDomainFilterDataImageModerationLimits spoof(Integer spoof) {
    
    this.spoof = spoof;
    return this;
  }

   /**
   * Get spoof
   * @return spoof
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSpoof() {
    return spoof;
  }


  public void setSpoof(Integer spoof) {
    this.spoof = spoof;
  }


  public SetDomainFilterDataImageModerationLimits medical(Integer medical) {
    
    this.medical = medical;
    return this;
  }

   /**
   * Get medical
   * @return medical
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMedical() {
    return medical;
  }


  public void setMedical(Integer medical) {
    this.medical = medical;
  }


  public SetDomainFilterDataImageModerationLimits violence(Integer violence) {
    
    this.violence = violence;
    return this;
  }

   /**
   * Get violence
   * @return violence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getViolence() {
    return violence;
  }


  public void setViolence(Integer violence) {
    this.violence = violence;
  }


  public SetDomainFilterDataImageModerationLimits racy(Integer racy) {
    
    this.racy = racy;
    return this;
  }

   /**
   * Get racy
   * @return racy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRacy() {
    return racy;
  }


  public void setRacy(Integer racy) {
    this.racy = racy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetDomainFilterDataImageModerationLimits setDomainFilterDataImageModerationLimits = (SetDomainFilterDataImageModerationLimits) o;
    return Objects.equals(this.adult, setDomainFilterDataImageModerationLimits.adult) &&
        Objects.equals(this.spoof, setDomainFilterDataImageModerationLimits.spoof) &&
        Objects.equals(this.medical, setDomainFilterDataImageModerationLimits.medical) &&
        Objects.equals(this.violence, setDomainFilterDataImageModerationLimits.violence) &&
        Objects.equals(this.racy, setDomainFilterDataImageModerationLimits.racy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adult, spoof, medical, violence, racy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetDomainFilterDataImageModerationLimits {\n");
    sb.append("    adult: ").append(toIndentedString(adult)).append("\n");
    sb.append("    spoof: ").append(toIndentedString(spoof)).append("\n");
    sb.append("    medical: ").append(toIndentedString(medical)).append("\n");
    sb.append("    violence: ").append(toIndentedString(violence)).append("\n");
    sb.append("    racy: ").append(toIndentedString(racy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adult");
    openapiFields.add("spoof");
    openapiFields.add("medical");
    openapiFields.add("violence");
    openapiFields.add("racy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SetDomainFilterDataImageModerationLimits
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SetDomainFilterDataImageModerationLimits.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SetDomainFilterDataImageModerationLimits is not found in the empty JSON string", SetDomainFilterDataImageModerationLimits.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SetDomainFilterDataImageModerationLimits.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SetDomainFilterDataImageModerationLimits` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SetDomainFilterDataImageModerationLimits.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SetDomainFilterDataImageModerationLimits' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SetDomainFilterDataImageModerationLimits> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SetDomainFilterDataImageModerationLimits.class));

       return (TypeAdapter<T>) new TypeAdapter<SetDomainFilterDataImageModerationLimits>() {
           @Override
           public void write(JsonWriter out, SetDomainFilterDataImageModerationLimits value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SetDomainFilterDataImageModerationLimits read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SetDomainFilterDataImageModerationLimits given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SetDomainFilterDataImageModerationLimits
  * @throws IOException if the JSON string is invalid with respect to SetDomainFilterDataImageModerationLimits
  */
  public static SetDomainFilterDataImageModerationLimits fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SetDomainFilterDataImageModerationLimits.class);
  }

 /**
  * Convert an instance of SetDomainFilterDataImageModerationLimits to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

