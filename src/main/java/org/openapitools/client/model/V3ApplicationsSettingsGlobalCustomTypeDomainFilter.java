/*
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * V3ApplicationsSettingsGlobalCustomTypeDomainFilter
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-29T11:00:21.022543+01:00[Europe/London]")
public class V3ApplicationsSettingsGlobalCustomTypeDomainFilter {
  public static final String SERIALIZED_NAME_DOMAINS = "domains";
  @SerializedName(SERIALIZED_NAME_DOMAINS)
  private List<String> domains = null;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Integer type;

  public static final String SERIALIZED_NAME_SHOULD_CHECK_GLOBAL = "should_check_global";
  @SerializedName(SERIALIZED_NAME_SHOULD_CHECK_GLOBAL)
  private Boolean shouldCheckGlobal;

  public V3ApplicationsSettingsGlobalCustomTypeDomainFilter() { 
  }

  public V3ApplicationsSettingsGlobalCustomTypeDomainFilter domains(List<String> domains) {
    
    this.domains = domains;
    return this;
  }

  public V3ApplicationsSettingsGlobalCustomTypeDomainFilter addDomainsItem(String domainsItem) {
    if (this.domains == null) {
      this.domains = new ArrayList<String>();
    }
    this.domains.add(domainsItem);
    return this;
  }

   /**
   * Get domains
   * @return domains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getDomains() {
    return domains;
  }


  public void setDomains(List<String> domains) {
    this.domains = domains;
  }


  public V3ApplicationsSettingsGlobalCustomTypeDomainFilter type(Integer type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getType() {
    return type;
  }


  public void setType(Integer type) {
    this.type = type;
  }


  public V3ApplicationsSettingsGlobalCustomTypeDomainFilter shouldCheckGlobal(Boolean shouldCheckGlobal) {
    
    this.shouldCheckGlobal = shouldCheckGlobal;
    return this;
  }

   /**
   * Get shouldCheckGlobal
   * @return shouldCheckGlobal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getShouldCheckGlobal() {
    return shouldCheckGlobal;
  }


  public void setShouldCheckGlobal(Boolean shouldCheckGlobal) {
    this.shouldCheckGlobal = shouldCheckGlobal;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V3ApplicationsSettingsGlobalCustomTypeDomainFilter v3ApplicationsSettingsGlobalCustomTypeDomainFilter = (V3ApplicationsSettingsGlobalCustomTypeDomainFilter) o;
    return Objects.equals(this.domains, v3ApplicationsSettingsGlobalCustomTypeDomainFilter.domains) &&
        Objects.equals(this.type, v3ApplicationsSettingsGlobalCustomTypeDomainFilter.type) &&
        Objects.equals(this.shouldCheckGlobal, v3ApplicationsSettingsGlobalCustomTypeDomainFilter.shouldCheckGlobal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domains, type, shouldCheckGlobal);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V3ApplicationsSettingsGlobalCustomTypeDomainFilter {\n");
    sb.append("    domains: ").append(toIndentedString(domains)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    shouldCheckGlobal: ").append(toIndentedString(shouldCheckGlobal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

